from loader import dp, bot
from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.dispatcher.filters import Text

import datetime

from sql import User, Who
from states import Ivent


@dp.message_handler(Text(contains='–ù–∞–π—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', ignore_case=True))
@dp.message_handler(text="–ù–∞–∑–∞–¥", state=Ivent.kategory)
async def start(message: types.Message):
    try:

        user = User.get(User.tg_id == message.from_user.id)

        groups = [el.name for el in Who.select()]
        keyboard = []

        for el in groups:
            keyboard.append([KeyboardButton(el)])

        keyboard.append([KeyboardButton('üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')])

        if datetime.datetime.strptime(user.dead_line.split('.')[0], "%Y-%m-%d %H:%M:%S") > datetime.datetime.today():

            await Ivent.started.set()

            await bot.send_photo(
                chat_id=message.from_user.id,
                photo=types.InputFile('img/selectcurs.png'),
                caption="–î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º, —Ç—ã —Å–µ–≥–æ–¥–Ω—è –æ–¥–∏–Ω –∏–ª–∏ —Å –∫–æ–º–ø–∞–Ω–∏–µ–π?",
                reply_markup=ReplyKeyboardMarkup(keyboard=keyboard,
                                                 resize_keyboard=True)
            )

        else:
            await message.answer("–£–ø—Å... \n" \
                                 "–£ –≤–∞—Å –∑–∞–∫–æ–Ω—Ñ–∏–ª–∞—Å—å –ø–æ–¥–ø–∏—Å–∫–∞ \n\n" \
                                 "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª —Ç–∞—Ä–∏—Ñ—ã –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É")

    except Exception as e:
        pass
